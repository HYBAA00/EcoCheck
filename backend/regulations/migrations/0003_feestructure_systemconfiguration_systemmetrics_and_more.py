# Generated by Django 5.2.3 on 2025-06-25 12:32

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('regulations', '0002_remove_law_created_at_remove_law_pdf_file_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la structure')),
                ('description', models.TextField(verbose_name='Description')),
                ('base_fee', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Frais de base')),
                ('admin_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Frais administratifs')),
                ('inspection_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name="Frais d'inspection")),
                ('urgent_processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Frais de traitement urgent')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=20.0, max_digits=5, verbose_name='Taux de TVA (%)')),
                ('effective_from', models.DateField(default=datetime.date.today, verbose_name='Valide à partir du')),
                ('effective_until', models.DateField(blank=True, null=True, verbose_name="Valide jusqu'au")),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_fee_structures', to=settings.AUTH_USER_MODEL)),
                ('treatment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fee_structures', to='regulations.treatmenttype', verbose_name='Type de traitement')),
            ],
            options={
                'verbose_name': 'Structure des frais',
                'verbose_name_plural': 'Structures des frais',
                'ordering': ['-effective_from'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Clé')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', models.TextField(verbose_name='Description')),
                ('value', models.TextField(verbose_name='Valeur')),
                ('setting_type', models.CharField(choices=[('string', 'Chaîne de caractères'), ('integer', 'Nombre entier'), ('decimal', 'Nombre décimal'), ('boolean', 'Booléen'), ('json', 'JSON'), ('date', 'Date'), ('datetime', 'Date et heure')], default='string', max_length=20, verbose_name='Type de paramètre')),
                ('category', models.CharField(default='general', max_length=50, verbose_name='Catégorie')),
                ('is_required', models.BooleanField(default=False, verbose_name='Obligatoire')),
                ('is_editable', models.BooleanField(default=True, verbose_name='Modifiable')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_configurations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuration système',
                'verbose_name_plural': 'Configurations système',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date')),
                ('total_requests', models.PositiveIntegerField(default=0, verbose_name='Total demandes')),
                ('pending_requests', models.PositiveIntegerField(default=0, verbose_name='Demandes en attente')),
                ('approved_requests', models.PositiveIntegerField(default=0, verbose_name='Demandes approuvées')),
                ('rejected_requests', models.PositiveIntegerField(default=0, verbose_name='Demandes rejetées')),
                ('total_payments', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Total paiements')),
                ('pending_payments', models.PositiveIntegerField(default=0, verbose_name='Paiements en attente')),
                ('completed_payments', models.PositiveIntegerField(default=0, verbose_name='Paiements complétés')),
                ('total_users', models.PositiveIntegerField(default=0, verbose_name='Total utilisateurs')),
                ('active_users', models.PositiveIntegerField(default=0, verbose_name='Utilisateurs actifs')),
                ('new_registrations', models.PositiveIntegerField(default=0, verbose_name='Nouvelles inscriptions')),
                ('certificates_issued', models.PositiveIntegerField(default=0, verbose_name='Certificats émis')),
                ('certificates_expired', models.PositiveIntegerField(default=0, verbose_name='Certificats expirés')),
                ('avg_processing_time', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Temps moyen de traitement (jours)')),
                ('avg_approval_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name="Taux d'approbation moyen (%)")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Métriques système',
                'verbose_name_plural': 'Métriques système',
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Création'), ('update', 'Modification'), ('delete', 'Suppression'), ('login', 'Connexion'), ('logout', 'Déconnexion'), ('view', 'Consultation'), ('export', 'Export'), ('import', 'Import'), ('approve', 'Approbation'), ('reject', 'Rejet'), ('assign', 'Attribution'), ('payment', 'Paiement'), ('certificate_issue', 'Émission certificat')], max_length=20, verbose_name='Action')),
                ('description', models.TextField(verbose_name='Description')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Horodatage')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('content_type', models.CharField(blank=True, max_length=100, null=True, verbose_name="Type d'objet")),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name="ID de l'objet")),
                ('object_repr', models.CharField(blank=True, max_length=200, null=True, verbose_name="Représentation de l'objet")),
                ('additional_data', models.JSONField(default=dict, verbose_name='Données supplémentaires')),
                ('success', models.BooleanField(default=True, verbose_name='Succès')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name="Message d'erreur")),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Log d'audit",
                'verbose_name_plural': "Logs d'audit",
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='regulations_user_id_1c77a6_idx'), models.Index(fields=['action', '-timestamp'], name='regulations_action_02a66b_idx'), models.Index(fields=['-timestamp'], name='regulations_timesta_96da9d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ValidationCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du cycle')),
                ('description', models.TextField(verbose_name='Description')),
                ('steps', models.JSONField(default=list, help_text='Liste des étapes de validation', verbose_name='Étapes')),
                ('estimated_duration_days', models.PositiveIntegerField(default=30, verbose_name='Durée estimée (jours)')),
                ('max_duration_days', models.PositiveIntegerField(default=60, verbose_name='Durée maximale (jours)')),
                ('required_roles', models.JSONField(default=dict, help_text='Mapping des étapes vers les rôles requis', verbose_name='Rôles requis')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_default', models.BooleanField(default=False, verbose_name='Cycle par défaut')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_validation_cycles', to=settings.AUTH_USER_MODEL)),
                ('treatment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validation_cycles', to='regulations.treatmenttype', verbose_name='Type de traitement')),
            ],
            options={
                'verbose_name': 'Cycle de validation',
                'verbose_name_plural': 'Cycles de validation',
                'unique_together': {('treatment_type', 'is_default')},
            },
        ),
    ]
